{
  "name": "multiqc_v1.15.0",
  "title": "MultiQC_v1.15.0",
  "summary": "v1.15.0 - Generates a run-wide QC report on various QC data files. The app runs a dockerised version of MultiQC v1.11 including the SEGLH plugin (som.py, exome depth and TSO500).",
  "tags": [
    "Read QC",
    "Statistics"
  ],
  "properties": {
    "github release": "v1.15.0"
  },
  "dxapi": "1.0.0",
  "inputSpec": [
    {
      "name": "project_for_multiqc",
      "label": "project to get the MultiQC treatment",
      "help": "The project to get the MultiQC treatment",
      "class": "string"
    },
    {
      "name": "coverage_level",
      "label": "coverage level",
      "help": "Set the (picard) coverage level reported in the card general stats table. E.g. '20' for % target bases with coverage >= 20X",
      "class": "string",
      "choices": [
        "2",
        "10",
        "20",
        "30",
        "40",
        "50",
        "100"
      ]
    }
  ],
  "outputSpec": [
    {
      "name": "multiqc",
      "label": "MultiQC output files",
      "help": "Text files containing QC metrics parsed by multiqc.",
      "class": "array:file"
    },
    {
      "name": "multiqc_report",
      "label": "MultiQC report",
      "help": "An html file archive containing the report as generated by MultiQC.",
      "class": "file"
    }
  ],
  "runSpec": {
    "interpreter": "bash",
    "distribution": "Ubuntu",
    "release": "20.04",
    "version": "0",
    "file": "src/code.sh"
  },
  "access": {
    "network": [
      "*"
    ],
    "allProjects": "VIEW"
  },
  "ignoreReuse": false,
  "regionalOptions": {
    "aws:us-east-1": {
      "systemRequirements": {
        "main": {
          "instanceType": "mem1_ssd1_x2"
        }
      }
    }
  }
}
